<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gtime = 0;
startedmoving = false;
grav = 0.4;
hsp = 0;
vsp = 0;
gspeed = 1;
jumpspeed = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.paused == true){
    image_speed = 0;
    exit;
}
gtime++;
if (gtime % 20 == 0)
    image_xscale = -image_xscale;

  
if (collision_line(x-15,y+15,x-15,y+32,obj_mario,false,false) ||
    collision_line(x+15,y+15,x+15,y+32,obj_mario,false,false))
    obj_mario.mariopowerup -= 1;
else if (collision_line(x-15,y-15,x+15,y-15,obj_mario,false,false))
{
    obj_mario.vsp -= obj_mario.jumpspeed*2;
    instance_create(x,y,obj_goombadie);
    instance_destroy();
}  

if (x &lt; view_xview + 544)
    startedmoving = true;
if (startedmoving)
    x -= gspeed;
if (vsp &lt; 10) vsp += grav;

if (place_meeting(x,y,obj_turtle))
    if (obj_turtle.isshell)// &amp;&amp; issliding == true)
    {
        instance_create(x,y,obj_goombadie);
        instance_destroy();
    }

//////////Horizontal Collision
if (place_meeting(x,y,obj_brick) ||
    place_meeting(x,y,obj_goomba))
{
    gspeed = -gspeed;
    if (collision_line(x-13,y+15,x+14,y+15,obj_brick,false,false))
    {
        instance_create(x,y,obj_goombadie);
        instance_destroy();
    }
}

//////////Vertical Collision
if (place_meeting(x,y+vsp,obj_brick))
{
    while (!place_meeting(x,y+sign(vsp),obj_brick))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

if (y &gt;= 500)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
